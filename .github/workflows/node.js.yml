# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
  NODE_VERSION: 22.x
  TURBO_TELEMETRY_DISABLED: 1
  BACKEND_CONTAINER: tasksync-backend
  BACKEND_IMAGE: tasksync-backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
      
  playwright-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout .NET Backend
      uses: actions/checkout@v4
      with:
        repository: kemalk89/TaskSync
        path: dotnet-backend

    - name: Start .NET Backend Dependencies with Docker Compose
      run: docker compose up -d
      working-directory: dotnet-backend

    - name: Build .NET Backend Docker image
      run: docker build -t ${{ env.BACKEND_IMAGE }} -f Dockerfile .
      working-directory: dotnet-backend

    - name: Start .NET Backend with Docker
      run: |
        docker run -d --name ${{ env.BACKEND_CONTAINER }} \
          -e Auth__Audience=https://tasksync.api.de/api \
          -e Auth__MetadataAddress=http://host.docker.internal:3002/.well-known/openid-configuration \
          -p 8080:8080 \
          ${{ env.BACKEND_IMAGE }} 
      working-directory: dotnet-backend

    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.node-NODE_VERSION }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Generate AUTH_SECRET
      run: npx -y auth secret
      working-directory: apps/web

    - name: Run Playwright tests
      run: npx playwright test
      env:
        AUTH_AUTH0_ISSUER: ${{ secrets.AUTH_AUTH0_ISSUER }}
        AUTH_AUTH0_ID: ${{ secrets.AUTH_AUTH0_ID }}
        SERVICE_TASKSYNC: http://localhost:8080
        AUTH_AUDIENCE: https://tasksync.api.de/api
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 14

    # Cleanup running docker services
    # Checkout .NET Backend again, because files are no longer available
    - name: Again, Checkout .NET Backend
      uses: actions/checkout@v4
      with:
        repository: kemalk89/TaskSync
        path: dotnet-backend
    - name: Cleanup containers
      if: always()
      run: |
        docker rm -f ${{ env.BACKEND_CONTAINER }} || true
    - name: Shutdown Docker services
      run: docker compose down
      working-directory: dotnet-backend

